Create database

use DATABASENAME


----------------------------------------------------------------------------------------------

Creating collection

db.movies.insert([
 {
 title : "Fight Club",
 writer : "Chuck Palahniuk" ,
 year : "1999",
 actors : [ "Brad Pitt", "Edward Norton" ]
 },
 {
 title : "Pulp Fiction" ,
 writer : "Quentin Tarantino" ,
 year : "1994",
 actors : [ "John Travolta","Uma Thurman"]
 },
 {
 title : "Inglorious Basterds" ,
 writer : "Quentin Tarantino",
 year : "2009" ,
 actors : [ "Brad Pitt", "Diane Kruger", "Eli Roth"]
 },
 {
 title : "The Hobbit: An Unexpected Journey ",
 writer : "J.R.R. Tolkein" ,
 year : "2012",
 franchise : "The Hobbit"
 },
 {
 title : "The Hobbit: The Desolation of Smaug",
 writer : "J.R.R. Tolkein",
 year : "2013",
 franchise : "The Hobbit"
 },
 {
 title : "The Hobbit: The Battle of the Five Armies",
  writer : "J.R.R. Tolkein ",
 year : "2012 ",
 franchise :"The Hobbit",
 synopsis : "Bilbo and Company are forced to engage in a war against an array of combatants and keep the Lonely Mountain from falling into the hands of a rising darkness."
 },
 {
 title : "Pee Wee Herman's Big Adventure"
 },
 {
 title : "Avatar"
 }
 ]);

** Showing the database : >show dbs
** Showing Collection : >show collections
------------------------------------------------------------------------------------------
Query/Find Documents

1. db.movies.find().pretty()

2. 



------------------------------------------------------------------------------------------
Update Documents

1. db.movies.update(
 { "title" : "The Hobbit: An Unexpected Journey "},{$set:{"synopsis":"A reluctant hobbit, Bilbo Baggins, sets out to the Lonely Mountain with a 
     spirited group of dwarves to reclaim their mountain home - and the gold within it - from the dragon Smaug."}},
 false,
 true)

2. db.movies.update( {"_id" :  ObjectId("5c2494134698f5f3ab0cbc4b")}, {$set:{"synopsis":"The dwarves, along with Bilbo Baggins and Gandalf the Grey, 
continue their quest to reclaim Erebor, their homeland, from Smaug. Bilbo Baggins is in possession of a mysterious and magical ring."}}, 
false, 
true )

3. db.movies.update({"title":"Pulp Fiction"},{$push:{"actors":"Samuel L. Jackson"}})


-------------------------------------------------------------------------------------------
Text Search

Create Index : db.movies.createIndex({"synopsis":"text"})

1.  db.movies.find({$text:{$search : "Bilbo"}}).pretty()

2.  db.movies.find({$text:{$search : "Gandalf"}}).pretty()

3.  db.movies.find({$text:{$search : "Bilbo -Gandalf"}}).pretty()

4.  db.movies.find({$text:{$search : "dwarves hobbit"}}).pretty()

5.  db.movies.find({$text:{$search : "dwarves\" hobbit\""}}).pretty()


---------------------------------------------------------------------------------------------
Delete Documents

1. db.movies.remove({"title":"Pee Wee Herman's Big Adventure"})

2. db.movies.remove({"title":"Avatar"})


----------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------

Relationships

*Creating users collection

db.users.insert([
 {
 username : "GoodGuyGreg",
 first_name : "Good Guy",
 last_name : "Greg"
 },
 {
 username : "ScumbagSteve",
 first : "Scumbag",
 last : "Steve"
 }
 ])

*Creating posts collection

 db.posts.insert([
 {
 username : "GoodGuyGreg",
 title : "Passes out at party",
 body : "Wakes up early and cleans house"
 },
 {
 username : "GoodGuyGreg",
 title : "Steals your identity",
 body : "Raises your credit score"
 },
 {
 username : "GoodGuyGreg",
 title : "Reports a bug in your code",
 body : "Sends you a Pull Request"
 },
 {
 username : "ScumbagSteve",
 title : "Borrows something",
 body : "Sells it"
 },
 {
 username : "ScumbagSteve",
 title : "Borrows everything",
 body : "The end"
 },
 {
 username : "ScumbagSteve",
 title : "Forks your repo on github",
 body : "Sets to private"
 }
 ])


*Creating comments collection

db.comments.insert([
{
username : "GoodGuyGreg",
comment : "Hope you got a good deal!",
post : "
